View(x4)
names(x)
names(x4)
plot(x$advxmonth, type="l")
plot(x$MONTH_OUTBOUND, x$advxmonth, type="l")
?plot
plot(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), x$advxmonth, type="l")
plot(x$advxmonth, type="l")
plot(x$advxmonth, type="l", col = "blue")
lines(x1$advmonth, typle="l", col = "orange")
lines(x1$advxmonth, typle="l", col = "orange")
lines(x1$advxmonth, type="l", col = "orange")
lines(x1$advxmonth, type="l", col = "orange")
lines(x1$advxmonth, type="l", col = "orange")
lines(x1$advxmonth, type="l", col = "orange")
points(x1$advxmonth, type="l", col = "orange")
points(x$advxmonth, type="l", col = "orange")
points(x1$advxmonth, type="l", col = "orange")
points(x1$advxmonth, col = "orange")
View(x1)
plot(x$advxmonth, type="l", col = "blue")
lines(x1$advxmonth, type="l", col = "orange")
lines(x2$advxmonth, type="l", col = "red")
lines(x3$advxmonth, type="l", col = "green")
lines(x4$advxmonth, type="l", col = "pink")
advancepermonth <- function(dd) {
group_by(dd, MONTH_PURCHASE) %>% summarise(advxmonth = mean(ADVANCE))
}
x1 <- advancepermonth(ddCityBreak)
x2 <- advancepermonth(ddBusiness)
x3 <- advancepermonth(ddCityBreak)
x3 <- advancepermonth(ddVacation1)
x4 <- advancepermonth(ddVacation2)
x5 <- advancepermonth(ddVacation3)
x5
max(x5[, 2])
max(x4[, 2])
max(x3[, 2])
max(x2[, 2])
max(x1[, 2])
?plot
plot(x5$advxmonth, type="l", col = "pink")
lines(x1$advxmonth, type="l", col = "blue")
lines(x2$advxmonth, type="l", col = "orange")
lines(x3$advxmonth, type="l", col = "red")
lines(x4$advxmonth, type="l", col = "green")
lines(x2$advxmonth, type="l", col = "brown")
?plot
View(x2)
View(1)
View(x1)
min(x1)
min(x1[, 2])
min(x2[, 2])
min(x3[, 2])
max(x5[, 2])
plot(x1$advxmonth, type="b", col = "blue", ylim=c(15, 65))
lines(x2$advxmonth, type="b", col = "brown")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month", xlab = "Month Number", ylab = "Average Advance in Days")
plot(x1$advxmonth, type="b", col = "blue", ylim=c(15, 65), xlab="", ylab="")
lines(x2$advxmonth, type="b", col = "brown")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 80), xlab="", ylab="")
lines(x2$advxmonth, type="b", col = "brown")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="")
lines(x2$advxmonth, type="b", col = "brown")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="")
lines(x2$advxmonth, type="b", col = "orange")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="")
lines(x2$advxmonth, type="b", col = "orange")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month Purchase Tickets", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
?plot
?axis
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="")
axis(side = 1, at=c(1:12), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
lines(x2$advxmonth, type="b", col = "orange")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month Purchase Tickets", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="", xaxt = "n")
axis(side = 1, at=c(1:12), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
lines(x2$advxmonth, type="b", col = "orange")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month Purchase Tickets", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
advancepermonthoutbound <- function(dd) {
group_by(dd, MONTH_OUTBOUND) %>% summarise(advxmonth = mean(ADVANCE))
}
x1 <- advancepermonthoutbound(ddCityBreak)
x2 <- advancepermonthoutbound(ddBusiness)
x3 <- advancepermonthoutbound(ddVacation1)
x4 <- advancepermonthoutbound(ddVacation2)
x5 <- advancepermonthoutbound(ddVacation2)
x5 <- advancepermonthoutbound(ddVacation3)
plot(x1$advxmonth, type="b", col = "blue", ylim=c(10, 75), xlab="", ylab="", xaxt = "n")
axis(side = 1, at=c(1:12), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
lines(x2$advxmonth, type="b", col = "orange")
lines(x3$advxmonth, type="b", col = "red")
lines(x4$advxmonth, type="b", col = "green")
lines(x5$advxmonth, type="b", col = "pink")
title(main = "Average advance x Month Outbound", xlab = "Month Number", ylab = "Average Advance in Days")
legend("topright", legend = c("CityBreak", "Business", "Vacation1", "Vacation2", "Vacation3"),
col = c("blue", "orange", "red", "green", "pink"), lty = 1, lwd = 2)
names(Dd)
names(Dd)
names(dd)
levels(dd$PRODUCT)
x <- dd
x$ADVANCE <- as.numeric(x$ADVANCE)
lapply(split(x, x$PRODUCT) function(elt) mean(elt$DURATION))
lapply(split(x, x$PRODUCT), function(elt) mean(elt$DURATION))
names(dd)
barplot(dd$PAX_ISSUED)
barplot(dd$PAX_ISSUEDF)
?split
summary(dd$PAX_ISSUED)
table(dd$PAX_ISSUED)
table(dd$PAX_ISSUED)/nrow(dd)
round(table(dd$PAX_ISSUED)/nrow(dd)*100, 0)
round(table(dd$PAX_ISSUED)/nrow(dd)*100, 2)
summary(dd$HAULTYPE)
summary(dd)
install.packages(googlesheets)
install.packages("googlesheets")
library(googlesheets)
library(plyr)
library(dplyr)
library(xlsx)
gs_auth();
gs_ls()
gs_ls(regex = sergi.porras)
gs_ls(regex = 'sergi.porras')
gs_ls(regex = 'amazing')
ss <- "https://docs.google.com/spreadsheets/d/10gXCCDYti9FUPLuOo-ZxAGkigDsfTrk-yFbQf5EsdcM/edit#gid=1009705231&vpid=U7"
sheetName <- "accES"
gs_read(ss, sheetName, "A3:AM11")
ssKey <- extract_key_from_url(ss)
ssKeu
ssKey
gs_read(ssKey, sheetName, "A3:AM11")
gs_read(ssKey, sheetName, "A3:AM11")
gs_read(ssKey, ws = sheetName, range = "A3:AM11")
gs_url(ss)
rm(ssKey)
gs_read(ssKey, ws = sheetName, range = "A2:AM7", col_names = TRUE)
ssObj <- gs_url(ss)
gs_read(ssObj, ws = sheetName, range = "A2:AM7", col_names = TRUE)
ssDF <- gs_read(ssObj, ws = sheetName, range = "A2:AM7", col_names = TRUE)
View(ssDF)
?gs_read()
??gs_read()
tList <- lsit(ssDF, ssDF, ssDF, ssDF)
tList <- list(ssDF, ssDF, ssDF, ssDF)
legnth(tList)
length(tList)
summary(tList)
names(tList)
values(tList)
labels(tList)
level(tList)
labels(tList) <- c("ES1", "ES2", "ES3", "ES4")
labels(tList)
names(tList)
names(tList) <- c("ES1", "ES2", "ES3", "ES4")
names(tList)
tList["ES3"]
ssDF <- gs_read(ssObj, ws = sheetName)
View8ssDF
View(ssDF)
colnames(ssDF) <- ssDF[1, ]
View(ssDF)
ssDF <- ssDF[-1, ]
View(ssDF)
class(ssDF[0, 0])
class(ssDF[0, 1])
class(ssDF[0, 2])
class(ssDF[0, 3])
ssDF[0, 1]
rm(tList)
tDF <- data.frame()
class(tDF)
names(tDF)
names(ssDF)
ssDF[, 1]
class(ssDF[0, 1])
class(ssDF[1, 1])
names(ssDF)
ssDF[, "ERROR90"]
ssDF[, "RES1"]
ssDF[, "RES2"]
ssDF[, "Res2"]
ssDF[, "Res2"] <- as.numeric(as.character(ssDF[, "Res2"]))
ssDF[, "Res2"]
ssDF[, "Res1"] <- as.numeric(ssDF[, "Res1"]))
ssDF[, "Res1"] <- as.numeric(ssDF[, "Res1"])
ssDF[, "Res1"] <- as.integer(ssDF[, "Res1"])
ssDF[, "Res1"]
class[ssDF[, "Res1"]]
?read.csv
ssDF <- gs_read_csv(ssObj, ws = sheetName)
names(ssDF)
View(ssDF)
names(ssDF) <- ssDF[1, ]
View(ssDF)
ssDF <- ssDF[-1, ]
View(ssDF)
class(ssDF[, "Res1"])
class(ssDF[, "Res1"][1])
class(ssDF[, "Res1"][0])
ssDF <- gs_read_csv(ssObj, ws = sheetName, dec = ".", colClasses = c(factor, numeric, numeric))
ssDF <- gs_read_csv(ssObj, ws = sheetName, dec = ".", colClasses = c('factor', 'numeric', 'numeric'))
View(ssDF)
class(ssDF[, "Res1"])
names(tList) <- c("ES1", "ES2", "ES3", "ES4")
ssDF <- gs_read_csv(ssObj, ws = sheetName, dec = ".", colClasses = c('factor', 'real', 'real'))
ssDF <- gs_read_csv(ssObj, ws = sheetName)
names(ssDF) <- ssDF[1, ]
ssDF <- ssDF[-1, ]
View(ssDF)
ssDF[, "Res1"]
x <- ssDF[, "Res1"]
class(x)
x
x[1]
x[2]
x <- x[1]
x
class(x)
x[, 1]
x[, 1] <- as.numeric(x[, 1])
x[, 1] <- as.numeric(unlist(x[, 1]))
x
class(x)
class(x[, 1])
class(x[1])
class(x01])
class(x[0])
sum(1+2)
sum(x[, 1])
sum(x[1:2, 1])
x
x[, 1]
class(x[1, 1])
typeof(x[1, 1])
x <- ssDF[, "CR1"]
x
unlist(x)
x <- unlist(x)
class(x)
y <- as.numeric(as.character(x))
y
ssDF <- gs_read_csv(ssObj, ws = sheetName)
names(ssDF) <- ssDF[1, ]
ssDF <- ssDF[-1, ]
View(ssDF)
length(ssDF)
c(2:length(ssDF))
ssDF[0, 0]
ssDF[1, 1]
for(i in c(2:length(ssDF))) {
ssDF[, i] <- as.numeric(ssDF[, i])
}
for(i in c(2:length(ssDF))) {
ssDF[, i] <- as.numeric(unlist(ssDF[, i])
}
for(i in c(2:length(ssDF))) {
ssDF[, i] <- as.numeric(unlist(ssDF[, i])
}
for(i in c(2:length(ssDF)))
ssDF[, i] <- as.numeric(unlist(ssDF[, i])
for(i in c(2:length(ssDF))) {}
ssDF[, i] <- as.numeric(unlist(ssDF[, i]))
}
ssDF <- gs_read_csv(ssObj, ws = sheetName)
names(ssDF) <- ssDF[1, ]
ssDF <- ssDF[-1, ]
View(ssDF)
for(i in c(2:length(ssDF))) {
ssDF[, i] <- as.numeric(unlist(ssDF[, i]))
}
class(ssDF[, 1])
class(ssDF[2, 1])
ssDF[2, 1]
ssDF[2, 2]
ssDF[2, 2][0]
ssDF[2, 2][1]
ssDF[2, 2][2]
ssDF[2, 2][1]
unlist(ssDF[2, 2])
class(unlist(ssDF[2, 2]))
class(unlist(ssDF[1, 1]))
ssDF <- gs_read_csv(ssObj, ws = sheetName)
names(ssDF) <- ssDF[1, ]
ssDF <- ssDF[-1, ]
View(ssDF)
class(unlist(ssDF[2, 2]))
plot(ssDF[, 1], ssDF[, 3])
length(ssDF[, 1])
ssDF[, 1]
length(ssDF[, 3])
x <- unlist(ssDF[, 1])
x
x
class(x)
names(x)
y <- unlist(ssDF[, 3])
plot(x, y)
class(y)
y
y <- as.numeric(y)
y
class(x)
class(y)
plot(x, y)
plot(y)
source('~/GitHub/connectSS.r')
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
find_rtools()
dd <- read.csv("data.xlsx", 1)
dd <- read.xlsx("data.xlsx", 1)
?read.csv
library(xlsx)
library(dplyr)
install.packages("rJava")
library(rJava)
library(rJava)
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
library(rJava)
install.packages("xlsx")
library(Xlsx)
library(slsx)
library(xlsx)
install.packages(rJava)
install.packages("rJava")
library(rJava)
JAVA_HOME
install.packages("dplyr")
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_66')
library(xlsx)
library(dplyr)
dd <- read.xlsx("data.xlsx", 1)
setwd("~/GitHub/sc2data")
dd <- read.xlsx("data.xlsx", 1)
dd <- read.xlsx("data.xlsx", 1)
View(dd)
dd[, "name"] <- as.character(dd[, "name"])
names(dd)
class(dd)
class(dd[, ])
?split
?tapply
x <- dd[!is.na(dd$airAttack), "name"]
x
x <- dd[!is.na(dd$groundAttack), "name"]
x
?reduce
??reduce
x <- dd[!is.na(dd$airAttack), "name"]
y <- dd[!is.na(dd$groundAttack), "name"]
?intersect
?Reduce
Reduce(intersect(x, y))
Reduce(intersect, list(x, y))
x <- dd[!is.na(dd$airAttack), "name"]
y <- dd[!is.na(dd$groundAttack), "name"]
z <- Reduce(intersect, list(x, y))
x
y
z
?select
View(dd)
highestDPS <- function(dd) {
if(!is.na(dd$groundAttack)) x <- (dd$groundAttack * dd$gaMultiplier)/dd$groundCD
x
}
?apply
?nrows
?nrow
highestDPS <- function(dd) {
maxDPS <- 0
unitName <- ""
for(i in c(1:nrow(dd))) {
if(!is.na(dd[i, "groundAttack"])) {
x <- (dd[i, "groundAttack"] * dd[i, "gaMultiplier"])/dd[i, "groundCD"]
if(x > maxDPS) {
maxDPS <- x
unitName <- dd
}
}
}
maxDPS
unitName
}
highestDPS(dd)
x <- (dd[1, "groundAttack"] * dd[1, "gaMultiplier"])/dd[1, "groundCD"]
x
highestDPS <- function(dd) {
maxDPS <- 0
unitName <- ""
for(i in c(1:nrow(dd))) {
if(!is.na(dd[i, "groundAttack"])) {
x <- (dd[i, "groundAttack"] * dd[i, "gaMultiplier"])/dd[i, "groundCD"]
if(!is.na(x > maxDPS)) {
maxDPS <- x
unitName <- dd
}
}
}
maxDPS
unitName
}
highestDPS(dd)
highestDPS <- function(dd) {
maxDPS <- 0
unitName <- ""
for(i in c(1:nrow(dd))) {
if(!is.na(dd[i, "groundAttack"])) {
x <- (dd[i, "groundAttack"] * dd[i, "gaMultiplier"])/dd[i, "groundCD"]
if(!is.na(x > maxDPS)) {
maxDPS <- x
unitName <- dd[i, "name"]
}
}
}
maxDPS
unitName
}
highestDPS(dd)
## Play with NA columns and intersects
x <- dd[!is.na(dd$airAttack), "name"]
y <- dd[!is.na(dd$groundAttack), "name"]
z <- Reduce(intersect, list(x, y))
highestDPS <- function(dd) {
maxDPS <- 0
unitName <- ""
for(i in c(1:nrow(dd))) {
if(!is.na(dd[i, "groundAttack"])) {
x <- (dd[i, "groundAttack"] * dd[i, "gaMultiplier"])/dd[i, "groundCD"]
if(!is.na(x > maxDPS)) {
maxDPS <- x
unitName <- dd[i, "name"]
}
}
}
View(maxDPS)
unitName
}
highestDPS(dd)
groundDPS <- dd$groundAttack*dd$gaMultiplier/dd$groundCD
groundDPS
airDPS <- dd$airAttack*dd$aaMultiplier/dd$airCD
?matrix
length(groundDPS)
res <- matrix(nrow = 3, ncol = 22)
res <- rbind(dd$name, groundDPS, airDPS)
View(res)
res <- rbind(groundDPS, airDPS)
colnames(res) <- dd$name
View(res)
res["groundDPS"]
res["groundDPS"][1]
res["groundDPS"][2]
res[1][1]
res[1][2]
res[2][2]
res[2][1]
res[1][2]
res[1]
res[2]
res[3]
res[4]
